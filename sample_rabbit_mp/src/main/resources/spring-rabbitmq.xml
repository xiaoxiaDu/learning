<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/rabbit
            http://www.springframework.org/schema/rabbit/spring-rabbit-1.5.xsd">
    <!-- 引入属性文件 -->
    <!--<context:property-placeholder location="classpath:application.properties"/>-->
    <!-- 连接服务配置 -->
    <rabbit:connection-factory id="connectionFactory"
                               virtual-host="/"
                               host="127.0.0.1"
                               port="5672"
                               username="admin"
                               password="admin"/>

    <rabbit:admin connection-factory="connectionFactory" />

    <!-- 将queue和routingKey进行绑定 -->
    <rabbit:queue name="direct_queue_test" durable="true" auto-delete="false" exclusive="false"/>

    <!-- direct方式：根据routingKey将消息发送到所有绑定的queue中 -->
    <rabbit:direct-exchange name="direct_test_exchange" durable="true">
        <rabbit:bindings>
            <rabbit:binding queue="direct_queue_test" key="direct_queue_test_key" />
        </rabbit:bindings>
    </rabbit:direct-exchange>


    <rabbit:template id="rabbitTemplate"
                     exchange="direct_test_exchange"
                     connection-factory="connectionFactory" />
    <!--template的一个属性 message-converter="jsonMessageConverter"-->

    <!-- spring amqp默认的是jackson的一个插件,目的将生产者生产的数据转换为json存入消息队列，由于fastjson的速度快于jackson,这里替换为fastjson的一个实现 -->
    <!--<bean id="jsonMessageConverter" class="FastJsonMessageConverter"/>-->


    <bean id="myMessageListener" class="com.learning.mq.listener.MyListener" />

    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="direct_queue_test" ref="myMessageListener"/>
    </rabbit:listener-container>






</beans>